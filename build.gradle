import java.nio.charset.StandardCharsets

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.github.ben-manes.versions' version '0.39.0'
    id 'org.ajoberstar.reckon' version '0.13.0'
}

def generalCharset = StandardCharsets.UTF_8.name();

reckon {
    scopeFromProp()
    stageFromProp('dev', 'beta', 'rc', 'final')
}

group = pluginGroup

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

compileJava.options.encoding = generalCharset
compileTestJava.options.encoding = generalCharset
javadoc.options.encoding = generalCharset

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    mavenLocal()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                name = project.name
                description = 'LeafCore is a library plugin offering tools for plugin developers, making some aspect of the plugin development way easier.'

                url = 'https://github.com/alfgard/leaf-core'

                licenses {
                    license {
                        name = 'Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'alexpado'
                        name = 'Alexandre PADOVAN'
                        email = 'contact@alexpado.fr'
                    }
                }

                scm {
                    connection = 'scm:git:github.com/alfgard/leaf-core.git'
                    developerConnection = 'scm:git:ssh://github.com/alfgard/leaf-core.git'
                    url = 'https://github.com/alfgard/leaf-core/tree/main'
                }
            }
        }
    }
}

dependencies {
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.8.2'
    compileOnly group: 'io.papermc.paper', name: 'paper-api', version: '1.18.1-R0.1-SNAPSHOT'
    implementation group: 'mc.leaf', name: 'leaf-core', version: '0.1.0-beta.0.6+20220106T003013Z'
    implementation group: 'org.jetbrains', name: 'annotations', version: '22.0.0'
}

processResources {
    def props = [version: version.toString()]
    inputs.properties props
    filteringCharset generalCharset
    filesMatching('plugin.yml') {
        expand props
    }
}

compileJava {
    options.compilerArgs << '-parameters'
}

jar {
    destinationDirectory = file("build/plugin")
    archiveFileName = pluginName + ".jar"
}

test {
    useJUnitPlatform()
}

